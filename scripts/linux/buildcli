#!/bin/bash

resolve_symlink() {
    local prog="$1"
    while [ -h "${prog}" ]; do
        local newProg
        newProg=$(readlink "${prog}")
        if [[ "${newProg}" == /* ]]; then
            prog="${newProg}"
        else
            prog="$(dirname "${prog}")/${newProg}"
        fi
    done
    echo "${prog}"
}

prog=$(resolve_symlink "$0")
oldwd=$(pwd)
progdir=$(dirname "${prog}")
cd "${progdir}" || exit
progdir=$(pwd)
prog="${progdir}/$(basename "${prog}")"
cd "${oldwd}" || exit

jarfile="buildcli.jar"
libdir="${progdir}"
if [ ! -r "${libdir}/${jarfile}" ]; then
    highest_jarfile=$(ls "${libdir}"/buildcli_*.jar 2>/dev/null | sort -V | tail -n 1)
    if [ -n "${highest_jarfile}" ]; then
        jarfile=$(basename "${highest_jarfile}")
    else
        echo "$(basename "${prog}")": "can't find ${jarfile} at ${libdir}"
        exit 1
    fi
fi

javaOpts="-Xmx1024M -Dfile.encoding=utf-8 --enable-preview --add-modules jdk.incubator.vector"

while [[ "$1" == -J* ]]; do
    opt="${1#-J}"
    javaOpts="${javaOpts} -${opt}"
    shift
done

if [ "${OSTYPE}" == "cygwin" ]; then
    jarpath=$(cygpath -w "${libdir}/${jarfile}")
else
    jarpath="${libdir}/${jarfile}"
fi

PATH="${PATH}:$(pwd)"
export PATH
exec java ${javaOpts} -jar "${jarpath}" "$@"